This module handles various types of jumps and branches within the instruction flow.Module jump_unit contain 14 input pins and 5 output pins. rs1_data would be signed 32 bit for source register1 data, rs2_data signed 32 bit for source register2 data, alu signed 32 bit for ALU, _alu_out signed 32 bit  ,WriteBack_rd_data  signed 32 bit for write back of destination register, Memory_out signed 32 bit for memory out, func3 unsigned 3 bit for function3, b_id unsigned 7 bit for branch id, j_id unsigned 10 bit for i_jal_id, i_jalr_id unsigned 7 bit for opcode, opcode unsigned 3 bit for forward jump operand1, forward_jump_operand2  unsigned 3 bit for forward jump operand2, imm signed 32 bit for immediate instruction. Outputs would be unsigned 32 bit for jalr of PC, br_en bool for branch enable, b_en bool for b_enable, jal_en bool for jal enable, jalr_en bool for jalr enable, jalr_PC bool for jalr Pc. . It checks conditions for different branch types and calculates the target address for the JALR instruction. It then assigns these control signals to output pins. 
