The module decode is designed to decode an instruction and extract various fields from it. Module consists of 1 input and 16 output pins. “instruction” would be unsigned 32 bit for Instruction. Outputs would be unsigned 7 bit for opcode,unsigned 5 bit rd_addr for destination register address, unsigned 3 bit func3 for function3, unsigned 5 bit rs1_addr for source register1, unsigned 5 bit rs2_addr for source register2, unsigned 7 bit func7 for function7, signed 32 bit imm for immediate instruction, unsigned 7 bit for r_id, unsigned 7 bit for i-math_id, unsigned 7 bit for i_load_id, unsigned 10 bit for i_jalr_id, unsigned 7 bit for s_id, unsigned 7 bit for b_id, unsigned 7 bit for u_auipc_id, unsigned 7 bit for u_lui_id, unsigned 7 bit for j_id. 
In this module we’ll first extract the opcode from the instruction from 0-6 bits. Sets rd_addr to bits 11 to 7, func3 to bits 14 to 12 of the instruction, rs1_addr to bits 15-19, rs2_addr to bits 20-24, func7 to bits 25-31.
 Immediate values of type(i, s, b, u, and j) are extracted from specific bits of the instruction for different opcodes. Connects internal signals to corresponding output pins by pairing each output with the corresponding internal signal and assigning their values.
